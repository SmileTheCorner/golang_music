import { v as defineComponent, r as resolveComponent, o as openBlock, c as createBlock, h as withCtx, x as createBaseVNode, a9 as createTextVNode, y as toDisplayString, g as createCommentVNode, e as createElementBlock, bG as withModifiers, f as renderSlot, _ as __unplugin_components_7, a$ as ref, cc as rpc, z as unref, u as createVNode, T as Teleport, F as Fragment, i as renderList } from './index-55dde797.js';
import { _ as _sfc_main$2 } from './IframeView.vue_vue_type_script_setup_true_lang-297e573e.js';

const _hoisted_1$1 = {
  flex: "~ col gap2",
  "flex-auto": "",
  "of-hidden": "",
  px1: ""
};
const _hoisted_2$1 = {
  "of-hidden": "",
  "text-ellipsis": "",
  "ws-nowrap": "",
  "text-lg": ""
};
const _hoisted_3$1 = {
  flex: "",
  "items-center": ""
};
const _hoisted_4$1 = /* @__PURE__ */ createBaseVNode("span", {
  "i-carbon:warning-filled": "",
  "ml-2": "",
  "text-3": "",
  "op-60": ""
}, null, -1);
const _hoisted_5$1 = {
  key: 0,
  class: "line-clamp-2",
  "mt--1": "",
  "text-sm": "",
  op50: ""
};
const _hoisted_6 = /* @__PURE__ */ createBaseVNode("div", { "flex-auto": "" }, null, -1);
const _hoisted_7 = {
  key: 1,
  flex: "~ gap-2",
  title: "Documentation"
};
const _hoisted_8 = /* @__PURE__ */ createBaseVNode("span", {
  "i-carbon-link": "",
  "text-lg": "",
  op50: ""
}, null, -1);
const _hoisted_9 = {
  key: 2,
  flex: "~ gap-2"
};
const _hoisted_10 = /* @__PURE__ */ createBaseVNode("span", {
  "i-carbon-logo-github": "",
  "text-lg": "",
  op50: ""
}, null, -1);
const _hoisted_11 = { flex: "~ col" };
const _hoisted_12 = {
  key: 0,
  "h-20": "",
  "w-20": "",
  flex: "",
  "flex-none": "",
  rounded: "",
  "bg-gray:3": "",
  p4: ""
};
const _hoisted_13 = ["src", "alt"];
const _sfc_main$1 = /* @__PURE__ */ defineComponent({
  __name: "DocDetails",
  props: {
    data: {}
  },
  emits: ["navigate"],
  setup(__props, { emit }) {
    function navigate(path) {
      window.open(path, "_blank");
    }
    return (_ctx, _cache) => {
      const _component_VTooltip = resolveComponent("VTooltip");
      const _component_VDCard = __unplugin_components_7;
      return openBlock(), createBlock(_component_VDCard, {
        flex: "~ gap2",
        "max-h": "50vh",
        "cursor-pointer": "",
        p4: "",
        hover: "border-primary",
        onClick: _cache[2] || (_cache[2] = ($event) => emit("navigate", _ctx.data))
      }, {
        default: withCtx(() => [
          createBaseVNode("div", _hoisted_1$1, [
            createBaseVNode("div", _hoisted_2$1, [
              createBaseVNode("span", _hoisted_3$1, [
                createTextVNode(toDisplayString(_ctx.data.name) + " ", 1),
                _ctx.data.tips ? (openBlock(), createBlock(_component_VTooltip, {
                  key: 0,
                  placement: "bottom-start"
                }, {
                  popper: withCtx(() => [
                    createBaseVNode("p", null, toDisplayString(_ctx.data.tips), 1)
                  ]),
                  default: withCtx(() => [
                    _hoisted_4$1
                  ]),
                  _: 1
                })) : createCommentVNode("", true)
              ])
            ]),
            _ctx.data.description ? (openBlock(), createElementBlock("div", _hoisted_5$1, toDisplayString(_ctx.data.description), 1)) : createCommentVNode("", true),
            _hoisted_6,
            _ctx.data.website ? (openBlock(), createElementBlock("div", _hoisted_7, [
              _hoisted_8,
              createBaseVNode("span", {
                "of-hidden": "",
                truncate: "",
                "ws-nowrap": "",
                "text-sm": "",
                op50: "",
                hover: "op100 underline text-primary",
                onClick: _cache[0] || (_cache[0] = withModifiers(($event) => navigate(_ctx.data.website), ["self", "stop"]))
              }, toDisplayString(_ctx.data.website.replace(/^https?:\/\//, "")), 1)
            ])) : createCommentVNode("", true),
            _ctx.data.github ? (openBlock(), createElementBlock("div", _hoisted_9, [
              _hoisted_10,
              createBaseVNode("span", {
                "of-hidden": "",
                truncate: "",
                "ws-nowrap": "",
                "text-sm": "",
                op50: "",
                hover: "op100 underline text-primary",
                onClick: _cache[1] || (_cache[1] = withModifiers(($event) => navigate(_ctx.data.github), ["self", "stop"]))
              }, toDisplayString(_ctx.data.github.replace(/^https?:\/\/github.com\//, "")), 1)
            ])) : createCommentVNode("", true),
            renderSlot(_ctx.$slots, "items")
          ]),
          createBaseVNode("div", _hoisted_11, [
            _ctx.data.icon ? (openBlock(), createElementBlock("div", _hoisted_12, [
              _ctx.data.icon ? (openBlock(), createElementBlock("img", {
                key: 0,
                src: _ctx.data.icon,
                alt: _ctx.data.name,
                ma: "",
                "h-full": ""
              }, null, 8, _hoisted_13)) : createCommentVNode("", true)
            ])) : createCommentVNode("", true)
          ])
        ]),
        _: 3
      });
    };
  }
});

/* Injected with object hook! */

const VueIcon = ""+new URL('vue-5d4e674c.svg', import.meta.url).href+"";
/* Injected with object hook! */

const PiniaIcon = ""+new URL('pinia-7ed2c830.svg', import.meta.url).href+"";
/* Injected with object hook! */

const VueUseIcon = ""+new URL('vueuse-995374f6.svg', import.meta.url).href+"";
/* Injected with object hook! */

const data = [
  {
    id: "vue",
    name: "Vue.js",
    description: "The Progressive JavaScript Framework",
    website: "https://vuejs.org",
    github: "https://github.com/vuejs/core",
    icon: VueIcon,
    openInBlank: true,
    tips: "Unable to embed it due to the security settings"
  },
  {
    id: "vue-router",
    name: "Vue Router",
    description: "The official Router for Vue.js",
    website: "https://router.vuejs.org",
    github: "https://github.com/vuejs/router",
    icon: VueIcon
  },
  {
    id: "pinia",
    name: "Pinia",
    description: "The intuitive store for Vue.js",
    website: "https://pinia.vuejs.org",
    github: "https://github.com/vuejs/pinia",
    icon: PiniaIcon
  },
  {
    id: "@vueuse/core",
    name: "VueUse",
    description: "Collection of essential Vue Composition Utilities for Vue 2 and 3",
    website: "https://vueuse.org",
    github: "https://github.com/vueuse/vueuse",
    icon: VueUseIcon
  }
];

/* Injected with object hook! */

const _hoisted_1 = {
  key: 0,
  relative: "",
  "h-screen": ""
};
const _hoisted_2 = ["onClick"];
const _hoisted_3 = /* @__PURE__ */ createBaseVNode("i", { "tabler:arrow-back-up": "" }, null, -1);
const _hoisted_4 = [
  _hoisted_3
];
const _hoisted_5 = {
  key: 1,
  grid: "",
  "grid-cols-minmax-400px": "",
  "h-screen": "",
  "select-none": "",
  gap3: "",
  "overflow-scroll": "",
  p4: "",
  class: "no-scrollbar"
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "documentations",
  setup(__props) {
    const items = ref(data);
    const iframeViewUrl = ref("");
    rpc.getPackages().then((res) => {
      const packagesName = Object.keys(res.packages);
      items.value = items.value.filter((item) => packagesName.includes(item.id));
    });
    function navigate(data2) {
      if (data2.openInBlank)
        window.open(data2.website, "_blank");
      else
        iframeViewUrl.value = data2.website;
    }
    function back() {
      iframeViewUrl.value = "";
    }
    return (_ctx, _cache) => {
      const _component_IframeView = _sfc_main$2;
      const _component_DocDetails = _sfc_main$1;
      return unref(iframeViewUrl) ? (openBlock(), createElementBlock("div", _hoisted_1, [
        createVNode(_component_IframeView, { src: unref(iframeViewUrl) }, null, 8, ["src"]),
        (openBlock(), createBlock(Teleport, { to: "body" }, [
          createBaseVNode("span", {
            fixed: "",
            "left-2": "",
            "top-2": "",
            "z-1000": "",
            "h-8": "",
            "w-8": "",
            flex: "",
            "cursor-pointer": "",
            "select-none": "",
            "items-center": "",
            "justify-center": "",
            "rounded-5": "",
            "bg-base": "",
            hover: "text-primary",
            onClick: withModifiers(back, ["prevent", "stop"])
          }, _hoisted_4, 8, _hoisted_2)
        ]))
      ])) : (openBlock(), createElementBlock("div", _hoisted_5, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(items), (item, index) => {
          return openBlock(), createBlock(_component_DocDetails, {
            key: index,
            data: item,
            onNavigate: navigate
          }, null, 8, ["data"]);
        }), 128))
      ]));
    };
  }
});

/* Injected with object hook! */

/* Injected with object hook! */

export { _sfc_main as default };
