import { _ as __unplugin_components_0 } from './PanelGrids-15f9a979.js';
import { v as defineComponent, cD as useRouter, a$ as ref, a1 as computed, cu as useCopy, cf as useEventListener, aP as onMounted, o as openBlock, c as createBlock, h as withCtx, x as createBaseVNode, z as unref, e as createElementBlock, l as normalizeStyle, a9 as createTextVNode, y as toDisplayString, c5 as useDevToolsClient, bX as useFrameState, u as createVNode } from './index-55dde797.js';
import { h as checkIsSecurityContext } from './index-ef144caa.js';

const _hoisted_1 = {
  key: 0
};
const _hoisted_2 = {
  key: 0
};
const _hoisted_3 = {
  key: 1,
  flex: "",
  "items-center": ""
};
const _hoisted_4 = {
  flex: "",
  "items-center": ""
};
const _hoisted_5 = /*#__PURE__*/createBaseVNode("i", {
  class: "i-mdi:eyedropper",
  "text-3": ""
}, null, -1);
const _hoisted_6 = [_hoisted_5];
const _sfc_main = /*#__PURE__*/defineComponent({
  __name: '__eyedropper',
  setup(__props) {
    const client = useDevToolsClient();
    const frameState = useFrameState();
    const router = useRouter();
    const hexColor = ref('');
    const showHex = ref(true);
    const color = computed(() => showHex.value ? hexColor.value : hexToRgb(hexColor.value));
    const copy = useCopy();
    function getDecimal(hex, start, end) {
      return Number.parseInt(hex.slice(start, end), 16);
    }
    function hexToRgb(hex) {
      return hex ? `rgb(${getDecimal(hex, 1, 3)},${getDecimal(hex, 3, 5)},${getDecimal(hex, 5, 7)})` : '';
    }
    useEventListener('keydown', e => {
      if (e.key === 'Escape') close();
    });
    function close() {
      client.value?.panel?.toggleViewMode();
      router.replace(frameState.route.value);
    }
    const inSecurityContext = checkIsSecurityContext();
    // @ts-expect-error missing types
    const supportEyeDropper = !!window.EyeDropper;
    const isSupported = inSecurityContext && supportEyeDropper;
    async function open() {
      if (!isSupported) return;
      // @ts-expect-error missing types?
      const eyeDropper = new EyeDropper();
      return eyeDropper.open();
    }
    async function restart() {
      hexColor.value = '';
      open().then(res => {
        hexColor.value = res.sRGBHex;
      }).catch(() => {
        close();
      });
    }
    onMounted(() => {
      open().then(res => {
        hexColor.value = res.sRGBHex;
      }).catch(() => {
        close();
      });
    });
    function ErrorBoundary() {
      let content = createVNode("div", null, null);
      if (!inSecurityContext) {
        content = createVNode("p", null, [createTextVNode("EyeDropper is not available due to "), createVNode("a", {
          "class": "text-primary transition-colors hover:text-primary/80",
          "href": "https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts",
          "target": '_blank'
        }, [createTextVNode("secure context")]), createTextVNode(" restrict.")]);
      } else if (!supportEyeDropper) {
        content = createVNode("p", null, [createTextVNode("Your browser doesn't support\xA0"), createVNode("a", {
          "class": "text-primary transition-colors hover:text-primary/80",
          "href": "https://developer.mozilla.org/en-US/docs/Web/API/EyeDropper#browser_compatibility",
          "target": '_blank'
        }, [createTextVNode("EyeDropper")]), createTextVNode(".")]);
      }
      return createVNode("div", {
        "class": "flex items-center justify-center text-12px"
      }, [content]);
    }
    return (_ctx, _cache) => {
      const _component_VDPanelGrids = __unplugin_components_0;
      return openBlock(), createBlock(_component_VDPanelGrids, {
        "h-screen": "",
        "w-screen": "",
        px5: ""
      }, {
        default: withCtx(() => [createBaseVNode("div", {
          absolute: "",
          "right-0": "",
          "top-0": "",
          p2: ""
        }, [createBaseVNode("button", {
          "carbon-close": "",
          ma: "",
          "text-xl": "",
          op50: "",
          "hover:op100": "",
          onClick: close
        })]), unref(isSupported) ? (openBlock(), createElementBlock("div", _hoisted_1, [!unref(color) ? (openBlock(), createElementBlock("div", _hoisted_2, " Launching EyeDropper ")) : (openBlock(), createElementBlock("div", _hoisted_3, [createBaseVNode("span", _hoisted_4, [createBaseVNode("em", {
          "mr-2": "",
          "inline-block": "",
          "h-5": "",
          "w-5": "",
          border: "",
          "border-base": "",
          rounded: "",
          hover: "cursor-pointer border-primary",
          style: normalizeStyle({
            backgroundColor: unref(color)
          }),
          onClick: _cache[0] || (_cache[0] = $event => showHex.value = !unref(showHex))
        }, null, 4), createTextVNode(" : "), createBaseVNode("span", {
          hover: "underline underline-offset-3 cursor-pointer",
          onClick: _cache[1] || (_cache[1] = $event => unref(copy)(unref(color)))
        }, toDisplayString(unref(color)), 1)]), createBaseVNode("span", {
          "ml-2": "",
          flex: "",
          "cursor-pointer": "",
          "items-center": "",
          border: "",
          "border-base": "",
          "rounded-10": "",
          "p-2": "",
          hover: "bg-active",
          onClick: restart
        }, _hoisted_6)]))])) : (openBlock(), createBlock(ErrorBoundary, {
          key: 1
        }))]),
        _: 1
      });
    };
  }
});
/* Injected with object hook! */

/* Injected with object hook! */

export { _sfc_main as default };
